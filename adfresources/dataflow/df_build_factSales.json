{
	"name": "df_build_factSales",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sql_stage_sales",
						"type": "DatasetReference"
					},
					"name": "stageSales"
				},
				{
					"dataset": {
						"referenceName": "sql_dim_store",
						"type": "DatasetReference"
					},
					"name": "dimStore"
				},
				{
					"dataset": {
						"referenceName": "sql_dim_territory",
						"type": "DatasetReference"
					},
					"name": "dimTerritory"
				},
				{
					"dataset": {
						"referenceName": "sql_dim_product",
						"type": "DatasetReference"
					},
					"name": "dimProduct"
				},
				{
					"dataset": {
						"referenceName": "sql_dim_date",
						"type": "DatasetReference"
					},
					"name": "dimDate"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductNo as string,",
				"          OnlineRetailer as string,",
				"          SalesMonth as string,",
				"          SalesTerritory as string,",
				"          SalesCurrency as string,",
				"          Title as string,",
				"          Vintage as integer,",
				"          Variety as string,",
				"          Score as integer,",
				"          ListPrice as integer,",
				"          Quantity as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> stageSales",
				"source(output(",
				"          StoreId as integer,",
				"          StoreName as string,",
				"          StoreType as string,",
				"          Description as string,",
				"          InsertedDate as timestamp,",
				"          UpdatedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimStore",
				"source(output(",
				"          TerritoryId as integer,",
				"          TerritoryCode as string,",
				"          TerritoryName as string,",
				"          TradeRegion as string,",
				"          Continent as string,",
				"          InsertedDate as timestamp,",
				"          UpdatedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimTerritory",
				"source(output(",
				"          ProductId as integer,",
				"          ProductNo as string,",
				"          ProductName as string,",
				"          Province as string,",
				"          Region as string,",
				"          Type as string,",
				"          Winery as string,",
				"          Vintage as integer,",
				"          Score as integer,",
				"          DealerPrice as integer,",
				"          Markup as double,",
				"          ListPrice as integer,",
				"          UpdatedDate as timestamp,",
				"          IsRowCurrent as integer,",
				"          EffectiveDate as timestamp,",
				"          EndDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimProduct",
				"source(output(",
				"          DateId as integer,",
				"          DateYear as integer,",
				"          DateMonth as integer,",
				"          YearMonth as string,",
				"          LastDayOfMonth as timestamp,",
				"          Quarter as integer,",
				"          Season as string,",
				"          InsertedDate as timestamp,",
				"          UpdatedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimDate",
				"stageSales join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1"
			]
		}
	}
}